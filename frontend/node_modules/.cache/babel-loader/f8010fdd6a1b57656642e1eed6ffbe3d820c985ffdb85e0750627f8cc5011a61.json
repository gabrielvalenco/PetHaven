{"ast":null,"code":"var _jsxFileName = \"c:\\\\laragon\\\\www\\\\PetHaven\\\\frontend\\\\src\\\\context\\\\ThemeContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  // Check if user has a theme preference in localStorage or prefers dark mode\n  const getInitialTheme = () => {\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme) {\n      return savedTheme;\n    }\n\n    // Check user's system preference\n    return window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n  };\n  const [theme, setTheme] = useState(getInitialTheme);\n\n  // Toggle theme function\n  const toggleTheme = () => {\n    setTheme(prevTheme => {\n      const newTheme = prevTheme === 'light' ? 'dark' : 'light';\n      localStorage.setItem('theme', newTheme);\n      return newTheme;\n    });\n  };\n\n  // Apply theme class to body element\n  useEffect(() => {\n    document.body.setAttribute('data-theme', theme);\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"DZ93y6MoushHNJ3xDqNSOypNhgY=\");\n_c = ThemeProvider;\nexport default ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","getInitialTheme","savedTheme","localStorage","getItem","window","matchMedia","matches","theme","setTheme","toggleTheme","prevTheme","newTheme","setItem","document","body","setAttribute","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["c:/laragon/www/PetHaven/frontend/src/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n  // Check if user has a theme preference in localStorage or prefers dark mode\n  const getInitialTheme = () => {\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme) {\n      return savedTheme;\n    }\n    \n    // Check user's system preference\n    return window.matchMedia && \n      window.matchMedia('(prefers-color-scheme: dark)').matches \n      ? 'dark' \n      : 'light';\n  };\n\n  const [theme, setTheme] = useState(getInitialTheme);\n\n  // Toggle theme function\n  const toggleTheme = () => {\n    setTheme(prevTheme => {\n      const newTheme = prevTheme === 'light' ? 'dark' : 'light';\n      localStorage.setItem('theme', newTheme);\n      return newTheme;\n    });\n  };\n\n  // Apply theme class to body element\n  useEffect(() => {\n    document.body.setAttribute('data-theme', theme);\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeProvider;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C;EACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,IAAIF,UAAU,EAAE;MACd,OAAOA,UAAU;IACnB;;IAEA;IACA,OAAOG,MAAM,CAACC,UAAU,IACtBD,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO,GACvD,MAAM,GACN,OAAO;EACb,CAAC;EAED,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAACQ,eAAe,CAAC;;EAEnD;EACA,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxBD,QAAQ,CAACE,SAAS,IAAI;MACpB,MAAMC,QAAQ,GAAGD,SAAS,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;MACzDR,YAAY,CAACU,OAAO,CAAC,OAAO,EAAED,QAAQ,CAAC;MACvC,OAAOA,QAAQ;IACjB,CAAC,CAAC;EACJ,CAAC;;EAED;EACAlB,SAAS,CAAC,MAAM;IACdoB,QAAQ,CAACC,IAAI,CAACC,YAAY,CAAC,YAAY,EAAER,KAAK,CAAC;IAC/CL,YAAY,CAACU,OAAO,CAAC,OAAO,EAAEL,KAAK,CAAC;EACtC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,oBACEZ,OAAA,CAACC,YAAY,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEV,KAAK;MAAEE;IAAY,CAAE;IAAAX,QAAA,EAClDA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACtB,EAAA,CArCWF,aAAa;AAAAyB,EAAA,GAAbzB,aAAa;AAuC1B,eAAeA,aAAa;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}