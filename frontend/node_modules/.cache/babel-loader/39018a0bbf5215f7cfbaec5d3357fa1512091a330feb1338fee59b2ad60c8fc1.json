{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\PetHaven\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { api, setAuthToken, apiPost } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Verificar se o usuário já está logado carregando do localStorage\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      try {\n        const userData = JSON.parse(storedUser);\n        setUser(userData);\n\n        // Configurar o cabeçalho de autorização para requisições\n        if (userData.token) {\n          setAuthToken(userData.token);\n        }\n      } catch (error) {\n        // Handle invalid JSON in localStorage\n        localStorage.removeItem('user');\n        console.error('Invalid user data in localStorage:', error);\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async (username, password) => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Use the api instance for login\n      const response = await api.post('/auth/login/', {\n        username,\n        password\n      });\n      console.log('Login response:', response.data);\n      const userData = response.data;\n\n      // Armazenar usuário no localStorage e contexto\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n\n      // Definir cabeçalho de autorização padrão para requisições futuras\n      setAuthToken(userData.token);\n      return true;\n    } catch (err) {\n      var _err$response, _err$response$data, _err$response$data$no;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : (_err$response$data$no = _err$response$data.non_field_errors) === null || _err$response$data$no === void 0 ? void 0 : _err$response$data$no[0]) || 'Falha no login. Verifique suas credenciais.');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async userData => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Using our custom api instance that handles CSRF tokens\n      const response = await api.post('/auth/register/', userData);\n      // Se quiser fazer login automático após o registro, descomente o código abaixo\n      // localStorage.setItem('user', JSON.stringify(response.data));\n      // setUser(response.data);\n      // axios.defaults.headers.common['Authorization'] = `Token ${response.data.token}`;\n      return true;\n    } catch (err) {\n      var _err$response2;\n      // Extrai mensagens de erro da resposta do Django REST\n      let errorMessage = 'Falha no cadastro. Por favor, tente novamente.';\n      if ((_err$response2 = err.response) !== null && _err$response2 !== void 0 && _err$response2.data) {\n        // Tentativa de formatar os erros de uma maneira mais amigável\n        const errors = err.response.data;\n        const errorMessages = [];\n        Object.keys(errors).forEach(key => {\n          if (Array.isArray(errors[key])) {\n            errorMessages.push(`${key}: ${errors[key].join(', ')}`);\n          } else {\n            errorMessages.push(`${key}: ${errors[key]}`);\n          }\n        });\n        if (errorMessages.length > 0) {\n          errorMessage = errorMessages.join('\\n');\n        }\n      }\n      setError(errorMessage);\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    // Remove user from localStorage and context\n    localStorage.removeItem('user');\n    setUser(null);\n\n    // Remove Authorization header\n    setAuthToken(null);\n  };\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","api","setAuthToken","apiPost","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","storedUser","localStorage","getItem","userData","JSON","parse","token","removeItem","console","login","username","password","response","post","log","data","setItem","stringify","err","_err$response","_err$response$data","_err$response$data$no","non_field_errors","register","_err$response2","errorMessage","errors","errorMessages","Object","keys","forEach","key","Array","isArray","push","join","length","logout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/laragon/www/PetHaven/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { api, setAuthToken, apiPost } from '../utils/api';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Verificar se o usuário já está logado carregando do localStorage\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      try {\r\n        const userData = JSON.parse(storedUser);\r\n        setUser(userData);\r\n        \r\n        // Configurar o cabeçalho de autorização para requisições\r\n        if (userData.token) {\r\n          setAuthToken(userData.token);\r\n        }\r\n      } catch (error) {\r\n        // Handle invalid JSON in localStorage\r\n        localStorage.removeItem('user');\r\n        console.error('Invalid user data in localStorage:', error);\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (username, password) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      // Use the api instance for login\r\n      const response = await api.post('/auth/login/', { username, password });\r\n      console.log('Login response:', response.data);\r\n      const userData = response.data;\r\n      \r\n      // Armazenar usuário no localStorage e contexto\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      setUser(userData);\r\n      \r\n      // Definir cabeçalho de autorização padrão para requisições futuras\r\n      setAuthToken(userData.token);\r\n      \r\n      return true;\r\n    } catch (err) {\r\n      setError(err.response?.data?.non_field_errors?.[0] || 'Falha no login. Verifique suas credenciais.');\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      // Using our custom api instance that handles CSRF tokens\r\n      const response = await api.post('/auth/register/', userData);\r\n      // Se quiser fazer login automático após o registro, descomente o código abaixo\r\n      // localStorage.setItem('user', JSON.stringify(response.data));\r\n      // setUser(response.data);\r\n      // axios.defaults.headers.common['Authorization'] = `Token ${response.data.token}`;\r\n      return true;\r\n    } catch (err) {\r\n      // Extrai mensagens de erro da resposta do Django REST\r\n      let errorMessage = 'Falha no cadastro. Por favor, tente novamente.';\r\n      if (err.response?.data) {\r\n        // Tentativa de formatar os erros de uma maneira mais amigável\r\n        const errors = err.response.data;\r\n        const errorMessages = [];\r\n        \r\n        Object.keys(errors).forEach(key => {\r\n          if (Array.isArray(errors[key])) {\r\n            errorMessages.push(`${key}: ${errors[key].join(', ')}`);\r\n          } else {\r\n            errorMessages.push(`${key}: ${errors[key]}`);\r\n          }\r\n        });\r\n        \r\n        if (errorMessages.length > 0) {\r\n          errorMessage = errorMessages.join('\\n');\r\n        }\r\n      }\r\n      \r\n      setError(errorMessage);\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    // Remove user from localStorage and context\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n    \r\n    // Remove Authorization header\r\n    setAuthToken(null);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    error,\r\n    login,\r\n    register,\r\n    logout,\r\n    isAuthenticated: !!user\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}