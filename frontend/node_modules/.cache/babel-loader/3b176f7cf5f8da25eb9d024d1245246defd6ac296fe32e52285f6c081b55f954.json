{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\PetHaven\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { api, setAuthToken, apiPost } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Verificar se o usuário já está logado carregando do localStorage\n    const storedUser = localStorage.getItem('user');\n    if (storedUser) {\n      try {\n        const userData = JSON.parse(storedUser);\n        setUser(userData);\n\n        // Configurar o cabeçalho de autorização para requisições\n        if (userData.token) {\n          setAuthToken(userData.token);\n        }\n      } catch (error) {\n        // Handle invalid JSON in localStorage\n        localStorage.removeItem('user');\n        console.error('Invalid user data in localStorage:', error);\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async (username, password) => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Use the apiPost utility for login\n      const result = await apiPost('/auth/login/', {\n        username,\n        password\n      });\n      if (result.success) {\n        const userData = result.data;\n        console.log('Login successful:', userData);\n\n        // Armazenar usuário no localStorage e contexto\n        localStorage.setItem('user', JSON.stringify(userData));\n        setUser(userData);\n\n        // Definir cabeçalho de autorização padrão para requisições futuras\n        setAuthToken(userData.token);\n        return true;\n      } else {\n        var _result$error, _result$error$non_fie;\n        const errorMsg = ((_result$error = result.error) === null || _result$error === void 0 ? void 0 : (_result$error$non_fie = _result$error.non_field_errors) === null || _result$error$non_fie === void 0 ? void 0 : _result$error$non_fie[0]) || 'Falha no login. Verifique suas credenciais.';\n        console.error('Login error:', errorMsg);\n        setError(errorMsg);\n        return false;\n      }\n    } catch (err) {\n      console.error('Unexpected login error:', err);\n      setError('Erro inesperado ao tentar fazer login. Tente novamente.');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const register = async userData => {\n    setLoading(true);\n    setError(null);\n    try {\n      // Use the apiPost utility for registration\n      const result = await apiPost('/auth/register/', userData);\n      if (result.success) {\n        console.log('Registration successful');\n        // Se quiser fazer login automático após o registro, descomente o código abaixo\n        // const userData = result.data;\n        // localStorage.setItem('user', JSON.stringify(userData));\n        // setUser(userData);\n        // setAuthToken(userData.token);\n        return true;\n      } else {\n        // Extrai mensagens de erro da resposta\n        let errorMessage = 'Falha no cadastro. Por favor, tente novamente.';\n        if (result.error) {\n          // Tentativa de formatar os erros de uma maneira mais amigável\n          const errors = result.error;\n          const errorMessages = [];\n          Object.keys(errors).forEach(key => {\n            if (Array.isArray(errors[key])) {\n              errorMessages.push(`${key}: ${errors[key].join(', ')}`);\n            } else {\n              errorMessages.push(`${key}: ${errors[key]}`);\n            }\n          });\n          if (errorMessages.length > 0) {\n            errorMessage = errorMessages.join('\\n');\n          }\n        }\n        console.error('Registration error:', errorMessage);\n        setError(errorMessage);\n        return false;\n      }\n    } catch (err) {\n      console.error('Unexpected registration error:', err);\n      setError('Erro inesperado ao tentar fazer o cadastro. Tente novamente.');\n      return false;\n    } finally {\n      setLoading(false);\n    }\n  };\n  const logout = () => {\n    // Remove user from localStorage and context\n    localStorage.removeItem('user');\n    setUser(null);\n\n    // Remove Authorization header\n    setAuthToken(null);\n  };\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","api","setAuthToken","apiPost","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","storedUser","localStorage","getItem","userData","JSON","parse","token","removeItem","console","login","username","password","result","success","data","log","setItem","stringify","_result$error","_result$error$non_fie","errorMsg","non_field_errors","err","register","errorMessage","errors","errorMessages","Object","keys","forEach","key","Array","isArray","push","join","length","logout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/laragon/www/PetHaven/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { api, setAuthToken, apiPost } from '../utils/api';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Verificar se o usuário já está logado carregando do localStorage\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      try {\r\n        const userData = JSON.parse(storedUser);\r\n        setUser(userData);\r\n        \r\n        // Configurar o cabeçalho de autorização para requisições\r\n        if (userData.token) {\r\n          setAuthToken(userData.token);\r\n        }\r\n      } catch (error) {\r\n        // Handle invalid JSON in localStorage\r\n        localStorage.removeItem('user');\r\n        console.error('Invalid user data in localStorage:', error);\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (username, password) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      // Use the apiPost utility for login\r\n      const result = await apiPost('/auth/login/', { username, password });\r\n      \r\n      if (result.success) {\r\n        const userData = result.data;\r\n        console.log('Login successful:', userData);\r\n        \r\n        // Armazenar usuário no localStorage e contexto\r\n        localStorage.setItem('user', JSON.stringify(userData));\r\n        setUser(userData);\r\n        \r\n        // Definir cabeçalho de autorização padrão para requisições futuras\r\n        setAuthToken(userData.token);\r\n        \r\n        return true;\r\n      } else {\r\n        const errorMsg = result.error?.non_field_errors?.[0] || 'Falha no login. Verifique suas credenciais.';\r\n        console.error('Login error:', errorMsg);\r\n        setError(errorMsg);\r\n        return false;\r\n      }\r\n    } catch (err) {\r\n      console.error('Unexpected login error:', err);\r\n      setError('Erro inesperado ao tentar fazer login. Tente novamente.');\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      // Use the apiPost utility for registration\r\n      const result = await apiPost('/auth/register/', userData);\r\n      \r\n      if (result.success) {\r\n        console.log('Registration successful');\r\n        // Se quiser fazer login automático após o registro, descomente o código abaixo\r\n        // const userData = result.data;\r\n        // localStorage.setItem('user', JSON.stringify(userData));\r\n        // setUser(userData);\r\n        // setAuthToken(userData.token);\r\n        return true;\r\n      } else {\r\n        // Extrai mensagens de erro da resposta\r\n        let errorMessage = 'Falha no cadastro. Por favor, tente novamente.';\r\n        if (result.error) {\r\n          // Tentativa de formatar os erros de uma maneira mais amigável\r\n          const errors = result.error;\r\n          const errorMessages = [];\r\n          \r\n          Object.keys(errors).forEach(key => {\r\n            if (Array.isArray(errors[key])) {\r\n              errorMessages.push(`${key}: ${errors[key].join(', ')}`);\r\n            } else {\r\n              errorMessages.push(`${key}: ${errors[key]}`);\r\n            }\r\n          });\r\n          \r\n          if (errorMessages.length > 0) {\r\n            errorMessage = errorMessages.join('\\n');\r\n          }\r\n        }\r\n        \r\n        console.error('Registration error:', errorMessage);\r\n        setError(errorMessage);\r\n        return false;\r\n      }\r\n    } catch (err) {\r\n      console.error('Unexpected registration error:', err);\r\n      setError('Erro inesperado ao tentar fazer o cadastro. Tente novamente.');\r\n      return false;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    // Remove user from localStorage and context\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n    \r\n    // Remove Authorization header\r\n    setAuthToken(null);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    error,\r\n    login,\r\n    register,\r\n    logout,\r\n    isAuthenticated: !!user\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}